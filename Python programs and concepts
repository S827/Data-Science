{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-05-26T11:39:22.373445Z","iopub.execute_input":"2024-05-26T11:39:22.373979Z","iopub.status.idle":"2024-05-26T11:39:23.672395Z","shell.execute_reply.started":"2024-05-26T11:39:22.373935Z","shell.execute_reply":"2024-05-26T11:39:23.670973Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"# 1. Convert integer time of format HHMM to string time of format HH:MM","metadata":{}},{"cell_type":"markdown","source":"1. convert integer time to string and pad with leading zeroes if needed","metadata":{}},{"cell_type":"code","source":"time = 110220\nstr_time = str(time).zfill(6)\nprint(type(str_time), str_time)\n","metadata":{"execution":{"iopub.status.busy":"2024-05-26T12:00:20.760199Z","iopub.execute_input":"2024-05-26T12:00:20.760630Z","iopub.status.idle":"2024-05-26T12:00:20.768059Z","shell.execute_reply.started":"2024-05-26T12:00:20.760588Z","shell.execute_reply":"2024-05-26T12:00:20.766469Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"<class 'str'> 110220\n","output_type":"stream"}]},{"cell_type":"markdown","source":"2. Extract hours, minutes and seconds","metadata":{}},{"cell_type":"code","source":"hours = str_time[:2]\nminutes = str_time[2:4]\nseconds = str_time[4:6]\nprint(hours, minutes, seconds, sep=':')","metadata":{"execution":{"iopub.status.busy":"2024-05-26T12:00:22.078845Z","iopub.execute_input":"2024-05-26T12:00:22.079310Z","iopub.status.idle":"2024-05-26T12:00:22.086844Z","shell.execute_reply.started":"2024-05-26T12:00:22.079275Z","shell.execute_reply":"2024-05-26T12:00:22.084985Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"11:02:20\n","output_type":"stream"}]},{"cell_type":"markdown","source":"3. create a formatted time string","metadata":{}},{"cell_type":"code","source":"formatted_time_str = '{:02}:{:02}:{:02}'.format(hours, minutes, seconds)\nformatted_time_str","metadata":{"execution":{"iopub.status.busy":"2024-05-26T12:00:57.596253Z","iopub.execute_input":"2024-05-26T12:00:57.596710Z","iopub.status.idle":"2024-05-26T12:00:57.604633Z","shell.execute_reply.started":"2024-05-26T12:00:57.596675Z","shell.execute_reply":"2024-05-26T12:00:57.603279Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"'11:02:20'"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}